/**
 * Aspose.Imaging Cloud API Reference
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 3.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.5
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/ExifData', 'model/TiffOptions'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./ExifData'), require('./TiffOptions'));
  } else {
    // Browser globals (root is window)
    if (!root.AsposeimagingCloudApiReference) {
      root.AsposeimagingCloudApiReference = {};
    }
    root.AsposeimagingCloudApiReference.TiffFrame = factory(root.AsposeimagingCloudApiReference.ApiClient, root.AsposeimagingCloudApiReference.ExifData, root.AsposeimagingCloudApiReference.TiffOptions);
  }
}(this, function(ApiClient, ExifData, TiffOptions) {
  'use strict';




  /**
   * The TiffFrame model module.
   * @module model/TiffFrame
   * @version 3.0
   */

  /**
   * Constructs a new <code>TiffFrame</code>.
   * Represents information about TIFF frame.
   * @alias module:model/TiffFrame
   * @class
   * @param height {Number} Gets or sets the frame height.
   * @param width {Number} Gets or sets the frame width.
   */
  var exports = function(height, width) {
    var _this = this;


    _this['Height'] = height;
    _this['Width'] = width;

  };

  /**
   * Constructs a <code>TiffFrame</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/TiffFrame} obj Optional instance to populate.
   * @return {module:model/TiffFrame} The populated <code>TiffFrame</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('FrameOptions')) {
        obj['FrameOptions'] = TiffOptions.constructFromObject(data['FrameOptions']);
      }
      if (data.hasOwnProperty('Height')) {
        obj['Height'] = ApiClient.convertToType(data['Height'], 'Number');
      }
      if (data.hasOwnProperty('Width')) {
        obj['Width'] = ApiClient.convertToType(data['Width'], 'Number');
      }
      if (data.hasOwnProperty('ExifData')) {
        obj['ExifData'] = ExifData.constructFromObject(data['ExifData']);
      }
    }
    return obj;
  }

  /**
   * Gets or sets options for the frame.
   * @member {module:model/TiffOptions} FrameOptions
   */
  exports.prototype['FrameOptions'] = undefined;
  /**
   * Gets or sets the frame height.
   * @member {Number} Height
   */
  exports.prototype['Height'] = undefined;
  /**
   * Gets or sets the frame width.
   * @member {Number} Width
   */
  exports.prototype['Width'] = undefined;
  /**
   * Gets or sets the EXIF data.
   * @member {module:model/ExifData} ExifData
   */
  exports.prototype['ExifData'] = undefined;



  return exports;
}));


